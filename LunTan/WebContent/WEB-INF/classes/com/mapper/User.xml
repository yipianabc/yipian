<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.model.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Mar 28 21:14:50 CST 2018.
    -->
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="password" jdbcType="INTEGER" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    
  </resultMap>
  
  
  <sql id="Base_Column_List" >
    userid, password, username
  </sql>
  
  <insert id="insertEntity" parameterType="com.model.User">
  	 INSERT into user (username, realname, password, sex, telephone, email, address) VALUES (#{username}, #{realname}, #{password}, #{sex}, #{telephone}, #{email}, #{address})
  </insert>
  
  <insert id="insertSelective" parameterType="com.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="getEntityById" parameterType="int" resultMap="BaseResultMap">
  	SELECT * 
  	<include refid="Base_Column_List" /> 
  	FROM user WHERE userid = #{userid}
  </select>
  
  <delete id="deleteEntity" parameterType="int">
  	DELETE FROM user WHERE userid = #{userid}
  </delete>
  
  <update id="updateEntity" parameterType="com.model.User">
  	UPDATE user SET username = #{username}, password = #{password}, sex = #{sex}, telephone = #{telephone}, email = #{email} WHERE userid = #{userid}
  </update>
  
  <update id="updateSelective" parameterType="com.model.User" >
    update user
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>

  <select id="selectByName" resultMap="BaseResultMap" parameterType="string" >
    select * from user where username = #{username,jdbcType=VARCHAR}
  </select>
  
  
  <select id="selectAllUsers" resultMap="BaseResultMap">
  select * from user
  </select>
  <delete id="deleteUser" parameterType="int">
  delete from user where userid=#{userid}
  </delete>
  
  <update id="updateUser" parameterType="com.model.User">
  update user set username=#{username},realname=#{realname},password=#{password},sex=#{sex},telephone=#{telephone},email=#{email},address=#{address} where userid=#{userid}
  
  </update>
  
  <!--  
  <insert id="saveEntity" parameterType="com.model.User">
  	 INSERT into user (username, realname, password, sex, telephone, email, address) VALUES (#{username}, #{realname}, #{password}, #{sex}, #{telephone}, #{email}, #{address})
  </insert>
  
  <select id="searchEntity" resultMap="BaseResultMap">
  
  </select>
  
  <select id="getEntityById" parameterType="int" resultMap="BaseResultMap">
  	SELECT * FROM user WHERE userid = #{userid}
  </select>
  
  <delete id="deleteEntity" parameterType="int">
  	DELETE FROM user WHERE userid = #{userid}
  </delete>
  
  <delete id="updateEntity" parameterType="com.model.User">
  	UPDATE user SET username = #{username}, password = #{password}, sex = #{sex}, telephone = #{telephone}, email = #{email} WHERE userid = #{userid}
  </delete>
  
  <select id="searchEntityByAccount" parameterType="map" resultMap="BaseResultMap">
  	SELECT * FROM user WHERE userid = #{userid} AND password = #{password}
  </select>
  -->
</mapper>